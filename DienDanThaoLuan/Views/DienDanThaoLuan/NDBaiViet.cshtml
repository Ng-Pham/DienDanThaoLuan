@model DienDanThaoLuan.Models.BaiViet
@using System.Xml.Linq
@{
    ViewBag.Title = "NDBaiViet";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<style>
    pre {
        background-color: #282a36; /* Màu nền của theme Dacrula */
        color: #f8f8f2; /* Màu chữ */
        padding: 15px; /* Đệm xung quanh mã code */
        border-radius: 5px; /* Bo tròn góc */
        overflow-x: auto; /* Hiển thị thanh cuộn ngang nếu cần */
        max-height: 400px; /* Chiều cao tối đa */
        overflow-y: auto; /* Hiển thị thanh cuộn dọc nếu cần */
        font-family: 'Courier New', Courier, monospace; /* Font chữ */
    }

    .hljs-keyword {
        color: #ff79c6;
    }
    /* Màu cho từ khóa */
    .hljs-string {
        color: #50fa7b;
    }
    /* Màu cho chuỗi */
    .hljs-variable {
        color: #bd93f9;
    }
    /* Màu cho biến */
    .hljs-function {
        color: #66d9ef;
    }
    /* Màu cho hàm */
    .hljs-comment {
        color: #6272a4;
        font-style: italic;
    }
    /* Định dạng cho mã bên trong */
    code {
        display: block; /* Chuyển thành khối */
        white-space: pre; /* Giữ nguyên định dạng */
    }

    .code-container {
        position: relative; /* Để nút copy có thể được định vị tương đối */
        margin-bottom: 30px;
    }

    /* CSS cho nút copy */
    .copy-button {
        position: absolute;
        top: 10px; /* Đặt nút ở phía trên */
        right: 20px; /* Đặt nút ở bên phải */
        background-color: #bd93f9; /* Màu nền cho nút phù hợp với theme Dracula */
        color: #282a36; /* Màu chữ cho nút */
        border: none;
        padding: 4px 8px; /* Giảm kích thước nút */
        font-size: 12px;
        cursor: pointer;
        border-radius: 5px; /* Bo tròn góc nút */
        z-index: 1000; /* Đảm bảo nút nằm trên cùng */
        transition: background-color 0.3s; /* Hiệu ứng chuyển màu */
    }

        .copy-button:hover {
            background-color: #9b59b6;
        }
    /* Thông báo sao chép thành công */
    .copy-notification {
        display: none; /* Ẩn thông báo ban đầu */
        position: absolute;
        top: 10px; /* Vị trí bên trên */
        left: 50%; /* Căn giữa theo chiều ngang */
        transform: translateX(-50%); /* Căn giữa hoàn toàn */
        background-color: #3eb8ef; /* Màu nền thông báo (màu xanh lá) */
        color: #f8f8f2; /* Màu chữ thông báo */
        padding: 10px;
        border-radius: 5px; /* Bo tròn góc thông báo */
        z-index: 1000; /* Đảm bảo thông báo nằm trên cùng */
        transition: opacity 0.5s ease; /* Hiệu ứng mờ dần */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5); /* Đổ bóng cho thông báo */
    }
    /* CSS cho nút tố cáo */
    .report-button {
        background-color: white;
        color: #ff4d4d;
        border-width: 1px;
        border-color: #ff4d4d;
        padding: 4px 8px;
        cursor: pointer;
        border-radius: 5px;
        margin-top: 10px;
        bottom: 10px; /* Align it to the top */
        right: 90px; /* Align it to the right */
        font-size: 16px;
        position: absolute;
    }

        .report-button:hover {
            background-color: #ff4d4d;
            color: white;
        }
    .post {
        background-color: #e7f3ff; /* Màu nền bài viết */
        border: 1px solid #007bff; /* Đường viền màu xanh đậm */
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 8px rgba(0, 123, 255, 0.4); /* Đổ bóng nổi bật */
        border-radius: 8px; /* Bo góc */
    }

    /*share button*/
    .share-buttons {
        position: absolute;
        bottom: 10px;
        right: 20px; /* Tăng khoảng cách sang phải */
        display: flex;
        gap: 0.5rem;
    }

    .share-btn {
        width: 2rem;
        height: 2rem;
        border-radius: 9999px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s;
        cursor: pointer;
    }

    .share-btn.facebook {
        background-color: #1877f2;
        color: white;
    }

    .share-btn.facebook:hover {
        background-color: #166fe5;
    }

    .share-btn.twitter {
        background-color: #1da1f2;
        color: white;
    }

    .share-btn.twitter:hover {
        background-color: #1a8cd8;
    }
</style>

@section breadcrumb{
    <div class="container mt-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("ChuDe", "DienDanThaoLuan", new { id = ViewBag.maloai })">@ViewBag.tenloai</a></li>
                <li class="breadcrumb-item active" aria-current="page"><a href="@Url.Action("BaiVietTheoCD", "DienDanThaoLuan", new { id = ViewBag.macd, tenloai = ViewBag.tenloai })">@ViewBag.tencd</a></li>
            </ol>
        </nav>
    </div>
}

<div class="post-title mt-2">
    @Model.TieuDeBV
</div>

<!-- Main Post -->
<div class="post-container post">
    <div class="row">
        <div class="col-2 d-flex flex-column align-items-center border-custom">
            <!-- Avatar Placeholder -->
            <div class="avatar">
                <img src="~/Images/@ViewBag.NguoiVietBai.AnhDaiDien" alt="Avatar">
            </div>
            <div class="post-header pt-2">@ViewBag.NguoiVietBai.TenDangNhap</div>
        </div>
        <div class="col-10">
            <div class="post-date">@Model.NgayDang</div>
            <div class="post-content limit-text resize-img">
                @Html.Raw(ViewBag.NoiDungVanBan)
                @if (!string.IsNullOrEmpty(ViewBag.CodeContent))
                {
                    <div class="code-container">
                        <button class="copy-button" onclick="copyCode()">Copy</button>
                        <pre><code class="language" id="codeBlock">@Html.Raw(HttpUtility.HtmlEncode(ViewBag.CodeContent))</code></pre>
                        <div class="copy-notification" id="copyNotification">Code copied to clipboard!</div>
                    </div>
                }
                @if (Session["UserId"] != null)
                {
                    <div class="share-buttons">
                        <button class="share-btn facebook" onclick="shareOnFacebook()">
                            <i class="fab fa-facebook-f"></i>
                        </button>
                        <button class="share-btn twitter" onclick="shareOnTwitter()">
                            <i class="fab fa-twitter"></i>
                        </button>
                    </div>
                    <button class="report-button right-btn" style="bottom: 10px; right: 105px;" onclick="showModal('@Model.MaBV')">Tố cáo</button>
                }
                else if (Session["AdminId"] != null)
                {
                    <div class="share-buttons">
                        <button class="share-btn facebook" onclick="shareOnFacebook()">
                            <i class="fab fa-facebook-f"></i>
                        </button>
                        <button class="share-btn twitter" onclick="shareOnTwitter()">
                            <i class="fab fa-twitter"></i>
                        </button>
                    </div>
                    <button class="report-button right-btn" style="bottom: 10px; right: 105px;" onclick="showXacNhan('@Model.MaBV')">Xóa</button>
                }
            </div>
        </div>
    </div>
</div>
@Html.Action("PartialDSBL", "DienDanThaoLuan", new { id = @Model.MaBV })
<!-- Reply Box -->
@Html.Action("PartialBinhLuan", "DienDanThaoLuan", new { id = @Model.MaBV })

@Html.Partial("_PartialModal", "DienDanThaoLuan")
@{
    var blId = TempData["BinhLuanId"] as string;
}

<script>
    /*share button */
    $(window).on('load', function () {
    var blId = '@blId';

        if (blId) {
            var commentElement = document.getElementById('bl-' + blId);
            if (commentElement) {
                commentElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                commentElement.style.backgroundColor = '#0c88c257';

                setTimeout(function () {
                    commentElement.style.backgroundColor = '';
                }, 3000);
            }
        }
    });

    function shareOnFacebook() {
        const postUrl = window.location.href;
        const postTitle = document.querySelector('.post-title').innerText;
        const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(postUrl)}&quote=${encodeURIComponent(postTitle)}`;
        window.open(facebookUrl, '_blank', 'width=600,height=400');
    }

    function shareOnTwitter() {
        const postUrl = window.location.href;
        const postTitle = document.querySelector('.post-title').innerText;
        const twitterUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(postUrl)}&text=${encodeURIComponent(postTitle)}`;
        window.open(twitterUrl, '_blank', 'width=600,height=400');
    }

    /*code ban đầu */
    function copyCode() {
        // Lấy nội dung của code
        const code = document.getElementById("codeBlock").innerText;

        // Tạo một textarea tạm thời để sao chép
        const textarea = document.createElement("textarea");
        textarea.value = code;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand("copy");
        document.body.removeChild(textarea);

        const notification = document.getElementById("copyNotification");
        notification.style.display = "block"; // Hiện thông báo
        notification.style.opacity = 1; // Đặt độ mờ thành 100%
        setTimeout(() => {
            notification.style.opacity = 0; // Để ẩn thông báo
        }, 2000);
    }
    document.addEventListener("DOMContentLoaded", function () {
        hljs.highlightAll(); // Khởi tạo Highlight.js
    });
    document.addEventListener("DOMContentLoaded", function () {
        const maxWidth = 800;  // Chiều rộng tối đa
        const maxHeight = 600;  // Chiều cao tối đa

        const images = document.querySelectorAll('.resize-img img');  // Chọn tất cả hình ảnh trong phần có class 'resize-img'

        images.forEach(img => {
            const originalWidth = img.naturalWidth;
            const originalHeight = img.naturalHeight;

            // Tính toán tỷ lệ khung hình
            const aspectRatio = originalWidth / originalHeight;

            // Điều chỉnh kích thước nếu cần thiết
            if (originalWidth > maxWidth || originalHeight > maxHeight) {
                if (aspectRatio > 1) {  // Ảnh ngang
                    img.width = maxWidth;
                    img.height = Math.round(maxWidth / aspectRatio);
                } else {  // Ảnh dọc
                    img.height = maxHeight;
                    img.width = Math.round(maxHeight * aspectRatio);
                }
            }
        });
    });
</script>